<?php

include_once('npm_datasource.features.inc');


/**
* Implementation of hook_action_info().
*/
function npm_datasource_action_info() {
  return array(
    'npm_datasource_update_mongo_action' => array(
      'description' => t('Updates the Mongo database with current drupal content'),
      'type' => 'node',
      'configurable' => FALSE,
      'hooks' => array('any' => TRUE),
      ),
  );
}

/**
* Implementation of a Drupal action.
* Updates the Mongo database with current drupal content
*/
function npm_datasource_update_mongo_action(&$object, $context = array()) {
  npm_datasource_update_mongo($object, $context);
}

function npm_datasource_update_mongo(&$object, $context) {
  // dsm($object);
  
  include('../api/loaddata_functions.inc');
  include('../../authentication/newplaymap_authentication.php');
  connectMongo(false);
  
  $domain = $_SERVER['HTTP_HOST'];
  $drupal_base_path = base_path();
  $id = $object->nid;
  
  // Update a specific piece of content
  switch ($object->type) {
    case 'artist':
      loadArtists($m, $mongo_database, $domain, $drupal_base_path, $id);
    break;
    case 'event':
      loadEvents($m, $mongo_database, $domain, $drupal_base_path, $id);
      loadPlays($m, $mongo_database, $domain, $drupal_base_path, $object->field_related_play[0]['nid']);
    break;
    case 'organization':
      loadOrganizations($m, $mongo_database, $domain, $drupal_base_path, $id);
    break;
    case 'play':
      loadPlays($m, $mongo_database, $domain, $drupal_base_path, $id);
      // Load all events for this play also
      loadEvents($m, $mongo_database, $domain, $drupal_base_path, 'all/' . $id);
    break;
  }
  
}
